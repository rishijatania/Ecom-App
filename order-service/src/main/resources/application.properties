spring.application.name=order-service
# server.port=${port:8082}

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://${PGSQL_HOST:localhost}:5432/${PGSQL_DB_NAME:ecom_order_service}
spring.datasource.username=${PGSQL_USER:unique_user}
spring.datasource.password=${PGSQL_PASSWORD:strong_password}
spring.jpa.show-sql=true

# Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL92Dialect

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
hibernate.jdbc.time_zone=UTC

# LOGGING
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG
# logging.level.com.baeldung.cloud.openfeign.client: DEBUG
logging.level.com.ecom.orderservice=DEBUG
#Node ID for GUid generation
spring.nodeID=${NODE_ID:0}